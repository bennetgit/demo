######## rule for editing this file ########
## 1. use eight # for properties groups, i.e. application, feature specific,
##    customer specific and misc;
## 2. use four # for sub groups, such as core core application, xtt, mq, etc;
## 3. use two # for comments;
## 4. use one # to comment out certain setting;
## 5. generic setting should be defined before settings for particular features;
## 5. no extra line if you're not defining new groups or sub groups;
###########################################

redis.export.host=redis
redis.export.port=6379
redis.export.db.index=0

# core database read
database.read_unit.url=jdbc:postgresql://otms-core-db:5432/${otms_core_db_name}
database.read_unit.username=${otms_core_db_username}
database.read_unit.password=${otms_core_db_password}
database.read_unit.driverClassName=org.postgresql.Driver
database.read_unit.maxIdle = 3
database.read_unit.maxActive = 10

# core database write, to match some jpa query use write DB
database.write.url=jdbc:postgresql://otms-core-db:5432/${otms_core_db_name}
database.write.username=${otms_core_db_username}
database.write.password=${otms_core_db_password}
database.write.driverClassName=org.postgresql.Driver
database.write.maxIdle = 3
database.write.maxActive = 10

# achive database
database.archive.url=jdbc:postgresql://otms-core-db:5432/${otms_core_db_name}
database.archive.username=${otms_core_db_username}
database.archive.password=${otms_core_db_password}
database.archive.driverClassName=org.postgresql.Driver
database.archive.maxIdle = 3
database.archive.maxActive = 10

database.readForArchive.url=jdbc:postgresql://otms-core-db:5432/${otms_core_db_name}
database.readForArchive.username=${otms_core_db_username}
database.readForArchive.password=${otms_core_db_password}
database.readForArchive.driverClassName=org.postgresql.Driver
database.readForArchive.maxIdle = 5
database.readForArchive.maxActive = 5

# temp file for timeline, to get company logo
storage.file.cache=/etc/repo
storage.company.local=/etc/repo/company
storage.company.oss=otms-dev-company:r96M6MsHIQSXezC1:JNdvNViK4dcdqRqkNkXpuYM7WYfb5L
storage.company.vault=otms-dev-company:AKIAJGZNMHYHTICRJRTA:TeoRznl0a3f9HgvVDYtuTsfOI+R5qxmnPoZKjb64
storage.company.oss.retry=3
storage.company.vault.retry=3
storage.epod.local=/etc/repo/epod
storage.epod.oss=otms-dev-epod:r96M6MsHIQSXezC1:JNdvNViK4dcdqRqkNkXpuYM7WYfb5L
storage.epod.vault=otms-dev-epod:AKIAJGZNMHYHTICRJRTA:TeoRznl0a3f9HgvVDYtuTsfOI+R5qxmnPoZKjb64
storage.epod.oss.retry=1
storage.epod.vault.retry=1
## the file keep in local server days; after the days, if file is uploaded to oss , the local file will be removed
storage.alive.days=1
storage.priority.alive.hours=24


## database connection pool(dbcp) setting
database.dbcp.testOnBorrow=false
database.dbcp.testWhileIdle=true
database.dbcp.timeBetweenEvictionRunsMillis=30000
database.dbcp.minEvictableIdleTimeMillis=30000
database.dbcp.numTestsPerEvictionRun=5
database.dbcp.maxWaitMillis=5000
database.dbcp.removeAbandoned=true
database.dbcp.removeAbandonedTimeout=60
database.dbcp.logAbandoned=true

# max order export concurrency
export.order.large.maxconcurrency=1

# max order export amount in one query
export.order.large.lower=5000
export.order.large.upper=50000


## redundancy config to make the auto inject component work...start

import.newordernumber.redis.enabled=false


## redundancy config to make the auto inject component work...end
