application.path.baseHomePage=http://127.0.0.1:8080

database.tariff.write.url=jdbc:postgresql://otms-tariff-db:5432/${otms_tariff_db_name}
database.tariff.write.username=${otms_tariff_db_username}
database.tariff.write.password=${otms_tariff_db_password}
database.tariff.write.driverClassName=org.postgresql.Driver
database.tariff.write.initialSize=1
database.tariff.write.maxActive=32
database.tariff.write.maxIdle=16

database.tariff.read.url=jdbc:postgresql://otms-tariff-db:5432/${otms_tariff_db_name}
database.tariff.read.username=${otms_tariff_db_username}
database.tariff.read.password=${otms_tariff_db_password}
database.tariff.read.driverClassName=org.postgresql.Driver
database.tariff.read.initialSize=1
database.tariff.read.maxActive=32
database.tariff.read.maxIdle=16

##########RabbitMQ setting

#enable rabbitMQ in RMImessageService for insert the messagedto into MQ
rabbitmq.host=rabbitmq
rabbitmq.port=5672
rabbitmq.username=guest
rabbitmq.password=guest

tariff.cache.service.start=true
tariff.cache.listener.start=true

#tariffEdit queue
tariffEdit.mq.service.start=true
tariffEdit.mq.listener.start=true

#tariffDiscussion queue
tariffDiscussionService.mq.service.start=true
tariffDiscussionService.mq.listener.start=true

#tariffExpire queue
tariffExpire.mq.service.start=true
tariffExpire.mq.listener.start=true

#mailqueue only producer
mail.mq.service.start=true
mail.mq.listener.start=true

#annotation value in  
message.consumer.handler.version=86
message.consumer.handler.retryAttempt=3

#set 1 for local debug easily; could increase it on QA / UAT /DEMO/PROD; max could be the core number of cpu * 2
message.eventMsgProcessNum=1

#RMI Service configuration
tariff.rmi.server.name=tariff-rmi
zookeeper.host.address=zookeeper://zookeeper:2181
tariff.protocol=rmi
tariff.port=1099


#### quartz
org.quartz.dataSource.quartzDS.driver=org.postgresql.Driver
org.quartz.dataSource.quartzDS.URL=jdbc:postgresql://otms-schedule-db:5432/${otms_schedule_db_name}
org.quartz.dataSource.quartzDS.user=${otms_schedule_db_username}
org.quartz.dataSource.quartzDS.password=${otms_schedule_db_password}
org.quartz.dataSource.quartzDS.maxConnections=10
org.quartz.instanceId=tariff-instance-01

#### Resource Synchronization Job
resource.sync.interval=0 * * * * ?
resource.sync.timeout_second=30
resource.sync.retry=3
resource.sync.host=otms-core
resource.sync.port=8080
resource.sync.expire_minute=30
resource.sync.buffer_second=30
resource.sync.uri.base_path=/ws/resource/query/v0
resource.sync.uri.company=company
resource.sync.uri.company_config=company/config
resource.sync.uri.custom_field=company/customField
resource.sync.uri.otms_location=company/location
resource.sync.uri.zipcode=zipcode
resource.sync.uri.truck_group=truckGroup

#### Webservice authentication
ws.auth.timeout_second=30
ws.auth.retry=3
ws.auth.host=otms-core
ws.auth.port=8080
ws.auth.uri=/ws/auth/verifyCompany

#### Cache
redis.tariff.host=redis
redis.tariff.port=6379

#### batch cacheSync in multithreads
application.cacheSync.batchSize=100
application.cacheSync.threadNumber=5

production.productionDeployment=false

#tariff operated type queue producer and consumer
tariffAudit.mq.service.start=true
tariffAudit.mq.listener.start=true

#lane template operated type queue consumer
laneTemplateAudit.mq.service.start=true
laneTemplateAudit.mq.listener.start=true

### When tariff start up, to init the redis UI & Suggestion cache or not, default false=does't init redis cache ###
startup.init.redis.enabled=false
### When tariff start up, multiple tariff instance, only one can init redis within checkinterval (unit:second),default 600 seconds  ###
startup.init.redis.checkinterval=600


dubbo.consumer.timeout=60000
dubbo.consumer.retries=0


tariff.mq.service.start=true
tariff.mq.listener.start=true
tariff.mq.consumer.num=1

tariffEdit.mq.consumer.num=1
tariffExpire.mq.consumer.num=1

tariffDiscussionService.mq.consumer.num=1
mail.mq.consumer.num=1
sms.mq.consumer.num=1

tariffAudit.mq.consumer.num=1
tariff.mq.consumer.handler.retryAttempt=3


sms.mq.service.start=true
sms.mq.listener.start=false
